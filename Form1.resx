<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Image.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        E0VDoyWA/wOWMXjkHJkU7QAAAABJRU5ErkJggg==
</value>
  </data>
</root>